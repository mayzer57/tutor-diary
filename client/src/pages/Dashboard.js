import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { getStudents, addStudent, deleteStudent, updateStudent } from '../api/api';

import StudentsList from '../components/StudentsList';
import ProfileSettingsModal from '../components/ProfileSettingsModal';
import EditStudentModal from '../components/EditStudentModal';
import AddStudentModal from '../components/AddStudentModal';
import './Dashboard.css';
import { useUnreadMessages } from '../hooks/useUnreadMessages';
function Dashboard({ onLogout }) {
  const [students, setStudents] = useState([]);
  const [error, setError] = useState(null);
  const [editingStudent, setEditingStudent] = useState(null);
  const [toast, setToast] = useState('');
  const [showAddModal, setShowAddModal] = useState(false);
  const [showStudents, setShowStudents] = useState(true);
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);
  const navigate = useNavigate();
  const [unread] = useUnreadMessages(); // ‚úÖ –ø—Ä–∞–≤–∏–ª—å–Ω–æ

  const [user, setUser] = useState(() => {
    const data = localStorage.getItem('user');
    try {
      return data ? JSON.parse(data) : null;
    } catch {
      return null;
    }
  });

  useEffect(() => {
    loadStudents();
  }, []);

  const loadStudents = async () => {
    try {
      setError(null);
      const data = await getStudents();
      setStudents(Array.isArray(data) ? data : []);
    } catch (err) {
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤');
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err);
      setStudents([]);
    }
  };

  const handleAddStudent = async (student) => {
    try {
      const res = await addStudent({
        ...student,
        tutor_id: user?.id
      });
      await loadStudents();
      return res;
    } catch (err) {
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞');
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', err);
    }
  };

  const handleDeleteStudent = async (id) => {
    try {
      const res = await deleteStudent(id);
      await loadStudents();
      setToast(res.message || '–£—á–µ–Ω–∏–∫ —É–¥–∞–ª—ë–Ω');
      setTimeout(() => setToast(''), 3000);
      return res;
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–∞');
      throw err;
    }
  };

  const handleEditStudent = (student) => {
    setEditingStudent(student);
  };

  const handleUpdateStudent = async (updatedStudent) => {
    try {
      const res = await updateStudent(updatedStudent);
      await loadStudents();
      setEditingStudent(null);
      setToast(res.message || '–£—á–µ–Ω–∏–∫ –æ–±–Ω–æ–≤–ª—ë–Ω');
      setTimeout(() => setToast(''), 3000);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞');
    }
  };

  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    if (onLogout) onLogout();
    navigate('/auth');
  };

  return (
    <div className="dashboard-container">
      {toast && (
        <div style={{
          position: 'fixed',
          top: '20px',
          right: '20px',
          backgroundColor: '#4caf50',
          color: 'white',
          padding: '12px 16px',
          borderRadius: '6px',
          boxShadow: '0 4px 12px rgba(0,0,0,0.15)',
          zIndex: 1000,
        }}>
          {toast}
        </div>
      )}

      <header className="dashboard-header">
        <h1>üìò –ü–∞–Ω–µ–ª—å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ {user && `- ${user.name}`}</h1>
        <div className="header-controls">
  <button className="settings-btn" onClick={() => setIsSettingsOpen(true)}>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</button>


<button className="settings-btn" onClick={() => navigate('/chat')}>
  üìò –ß–∞—Ç
  {unread > 0 && <span className="chat-badge">{unread}</span>}
</button>
  <button className="logout-btn" onClick={handleLogout}>–í—ã–π—Ç–∏</button>
</div>
      </header>

      {error && <div className="error-banner">{error}</div>}

      <div className="dashboard-grid">
  <button className="dashboard-btn" onClick={() => setShowAddModal(true)}>
    ‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞
  </button>
  <button className="dashboard-btn" onClick={() => navigate('/schedule')}>
    üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
  </button>
  <button className="dashboard-btn" onClick={() => navigate('/journal')}>
    üìò –ñ—É—Ä–Ω–∞–ª
  </button>
  <button className="dashboard-btn" onClick={() => navigate('/finance')}>
    üí∞ –§–∏–Ω–∞–Ω—Å—ã
  </button>
</div>


      {showAddModal && (
        <AddStudentModal
          onAdd={handleAddStudent}
          onClose={() => setShowAddModal(false)}
        />
      )}

      

      <EditStudentModal
        student={editingStudent}
        onSave={(student, save) => save && handleUpdateStudent(student)}
        onClose={() => setEditingStudent(null)}
      />

      <ProfileSettingsModal
        isOpen={isSettingsOpen}
        onClose={() => setIsSettingsOpen(false)}
        user={{ id: user?.id, role: 'tutor' }}
        initialData={user}
        setUser={setUser}
      />

      <button className="dashboard-btn" onClick={() => setShowStudents(!showStudents)}>
        {showStudents ? '–°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤' : '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤'}
      </button>

      {showStudents && (
        <StudentsList
        students={students}
        onDelete={handleDeleteStudent}
        onEdit={handleEditStudent}
        onSelect={(studentName) => navigate(`/journal?student=${encodeURIComponent(studentName)}`)}
      />
      )}
    </div>
  );
}

export default Dashboard;